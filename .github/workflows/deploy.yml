name: deploy

on: 
    push: 
        branches: [main]

jobs:
    deploy:
        runs-on: self-hosted

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Use Node.jobs
          uses: actions/setup-node@v3
          with:
            node-version: "20.x"

        - name: create .env file
          run: |
            echo "APP_KEYS=${{ secrets.APP_KEYS }}" > .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> .env
            echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> .env
            echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
            echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
            echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "DATABASE_SSL=${{ secrets.DATABASE_SSL }}" >> .env
            echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> .env
            echo "CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}" >> .env   
            echo "CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }}" >> .env
            echo "CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}" >> .env

        
        - name : Install dependecnies
          run: npm install

        - name: build Strapi
          run: npm run build 

        - name: Start The Server With PM2
          run: |
            pm2 stop codefree-backend || true
            pm2 start "npm run start" --name codefree-backend 
        - name: Save pm2 Process list
          run: pm2 save


    

